{
    // --- Part1: config HMP core --- 
    "config.py->GlobalConfig": {
        "note": "random-attackpost",// http://localhost:59547
        "env_name": "uhmap",
        "env_path": "MISSION.uhmap",
        // "heartbeat_on": "False",
        "draw_mode": "Img",
        "num_threads": 1,  // 请预留 num_threads * 1 GB 的内存空间
        "report_reward_interval": 4,
        "test_interval": 1280,
        "mt_act_order": "new_method",
        "test_epoch": 512,
        "interested_team": 0,
        "seed": 10098,
        "device": "cpu",
        "max_n_episode": 5000000,
        "fold": 1,
        "backup_files": [
            "MISSION/uhmap"
        ]
    },


      // --- Part2: config MISSION ---
    "MISSION.uhmap.uhmap_env_wrapper.py->ScenarioConfig": {
      "N_AGENT_EACH_TEAM": [ 8, 1 ], // 10 ships, 2 waterdrops
      "MaxEpisodeStep": 100,
      "StepGameTime": 0.5,
      "StateProvided": false,
      "render": false, // note: random seed has different impact on renderer and server
      "UElink2editor": false,
      "HeteAgents": false,
      "UnrealLevel": "UhmapAttackPost",
      "SubTaskSelection": "UhmapAttackPost",
      "UhmapVersion":"3.8",
      "UhmapRenderExe": "/home/hmp/UnrealHmapBinary/Version3.8/LinuxNoEditor/UHMP.sh",
      "UhmapServerExe": "/home/hmp/UnrealHmapBinary/Version3.8/LinuxServer/UHMPServer.sh",
      "TimeDilation": 64, // simulation time speed up, larger is faster
      "TEAM_NAMES": [
        "ALGORITHM.pymarl2_compat.pymarl2_compat->PymarlFoundation",
        // "ALGORITHM.script_ai.a_attackpost->AttackPostPreprogramBaseline",
        // "ALGORITHM.random.foundation->RandomControllerWithActionSetV2",
        "ALGORITHM.random.foundation->RandomControllerWithActionSetV4",
      ]
    },


    // --- Part3: config ALGORITHM 1/2 --- 
    "ALGORITHM.pymarl2_compat.pymarl2_compat.py->AlgorithmConfig": {
        "use_shell": "mini_shell_uhmap",
        "action_converter": "ALGORITHM.common.converter->UmapActionConverterV4",
        "state_compat": "obs_mean",
        "pymarl_config_injection":{
            "controllers.my_n_controller.py->PymarlAlgorithmConfig":{
                "use_normalization": "True",
                "use_vae": "False",
            },
            "config.py->GlobalConfig":{
                "batch_size": 128,
                "load_checkpoint": "False",
            }
        }
    },

    // --- Part3: config ALGORITHM 2/2 --- 
    "ALGORITHM.random.foundation.py->AlgorithmConfig": {
    },


    
}